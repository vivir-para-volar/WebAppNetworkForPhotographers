@model UserClientAppNetworkForPhotographers.Models.Data.Dtos.Contents.GetContentDto

<div class="pt-5">

    <div class="sliderContainer p-4">
        <div id="carouselControls" class="carousel slide" data-bs-touch="false" data-bs-interval="false">
            <div class="carousel-inner">

                <div class="carousel-item active">
                    <img class="photoSlider" src=@(Url.Action("GetContentPhoto", "General", new { contentId = Model.Id, name = Model.Photos[0].PhotoContent}))>
                </div>

                @for (var i = 1; i < Model.Photos.Count; i++)
                {
                    <div class="carousel-item">
                        <img class="photoSlider" src=@(Url.Action("GetContentPhoto", "General", new { contentId = Model.Id, name = Model.Photos[i].PhotoContent}))>
                    </div>
                }
            </div>

            <button class="carousel-control-prev" type="button" data-bs-target="#carouselControls" data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Предыдущий</span>
            </button>

            <button class="carousel-control-next" type="button" data-bs-target="#carouselControls" data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Следующий</span>
            </button>
        </div>
    </div>

</div>

<div class="container pt-2">

    <div class="containerParentFlexCenter">
        <div class="containerCenter">

            <div class="containerParentFlexMany">

                <div class="pe-4">
                    @if (Model.IsLike == true)
                    {
                        <button id="btnCreateLike@(Model.Id)" class="btnImg"
                                onclick="createLike(@(Model.Id))" style="display:none">
                            <img class="contentImg" src="~/image/content/heart.png">
                        </button>

                        <button id="btnDeleteLike@(Model.Id)" class="btnImg" onclick="deleteLike(@(Model.Id))">
                            <img class="contentImg" src="~/image/content/heartLike.png">
                        </button>
                    }
                    else
                    {
                        <button id="btnCreateLike@(Model.Id)" class="btnImg" onclick="createLike(@(Model.Id))">
                            <img class="contentImg" src="~/image/content/heart.png">
                        </button>

                        <button id="btnDeleteLike@(Model.Id)" class="btnImg"
                                onclick="deleteLike(@(Model.Id))" style="display:none">
                            <img class="contentImg" src="~/image/content/heartLike.png">
                        </button>
                    }

                    <a id="countLikes@(Model.Id)" src="#" class="ps-1">@(Model.CountLikes)</a>
                </div>

                <div>
                    @if (Model.IsFavourite == true)
                    {
                        <button id="btnCreateFavourite@(Model.Id)" class="btnImg"
                                onclick="createFavourite(@(Model.Id))" style="display:none">
                            <img class="contentImg" src="~/image/content/star.png">
                        </button>

                        <button id="btnDeleteFavourite@(Model.Id)" class="btnImg" onclick="deleteFavourite(@(Model.Id))">
                            <img class="contentImg" src="~/image/content/starFavourite.png">
                        </button>
                    }
                    else
                    {
                        <button id="btnCreateFavourite@(Model.Id)" class="btnImg" onclick="createFavourite(@(Model.Id))">
                            <img class="contentImg" src="~/image/content/star.png">
                        </button>

                        <button id="btnDeleteFavourite@(Model.Id)" class="btnImg"
                                onclick="deleteFavourite(@(Model.Id))" style="display:none">
                            <img class="contentImg" src="~/image/content/starFavourite.png">
                        </button>
                    }
                    <span id="countFavourites@(Model.Id)" class="ps-1">@(Model.CountFavourites)</span>
                </div>

            </div>

            <a asp-controller="Profiles" asp-action="Photographer" asp-route-id=@(Model.Photographer.Id)>
                <div class="containerParentFlexMany mt-4">
                    @if (Model.Photographer.PhotoProfile == null)
                    {
                        <div class="divForPhoto"><img class="profilePhoto" src="~/image/emptyProfile.png"></div>
                    }
                    else
                    {
                        <div class="divForPhoto">
                            <img class="profilePhoto" src=@(Url.Action("GetPhotographerPhoto", "General", new { name = Model.Photographer.PhotoProfile}))>
                        </div>
                    }

                    <div>
                        <p><strong>@(Model.Photographer.Username)</strong></p>
                    </div>
                </div>
            </a>

            <div class="mt-4">@(Model.Title)</div>

            <div class="mt-4"><strong>Загружено: </strong>@(Model.CreatedAt)</div>

            <div class="mt-3">
                <strong>Категории: </strong>
                @foreach (var category in Model.Categories)
                {
                    <a asp-controller="Settings" asp-action="UpdatePassword" class="btn btn-outline-dark" style="display: inline-block">@(category.Name)</a>
                }
            </div>
        </div>
    </div>
</div>

<div class="container pb-5 pt-5">
    <div class="containerParentFlexCenter">
        <div class="containerCenter">

            <h4 id="countComments"></h4>

            <div id="divComments">
                @foreach (var comment in Model.Comments)
                {
                    <div id="divComment@(comment.Id)" class="divComment containerParentFlex pt-3 pb-3">
                        <a asp-controller="Profiles" asp-action="Photographer" asp-route-id=@(comment.Photographer.Id)>
                            @if (comment.Photographer.PhotoProfile == null)
                            {
                                <div class="divForPhoto"><img class="profilePhotoMini" src="~/image/emptyProfile.png"></div>
                            }
                            else
                            {
                                <div class="divForPhoto">
                                    <img class="profilePhotoMini" src=@(Url.Action("GetPhotographerPhoto", "General", new { name = comment.Photographer.PhotoProfile}))>
                                </div>
                            }
                        </a>

                        <div class="divAfterPhoto">
                            <a asp-controller="Profiles" asp-action="Photographer" asp-route-id=@(comment.Photographer.Id)>
                                <p><strong>@(comment.Photographer.Username)</strong></p>
                            </a>

                            <p class="textComment mt-1">@(comment.Text)</p>
                            <div class="textDate mt-1">@(comment.CreatedAt)</div>
                        </div>

                        @if (comment.Photographer.Id == Model.UserId)
                        {
                            <div class="divDeleteComment pt-2">
                                <button class="btnImg" data-bs-toggle="modal"
                                        data-bs-target="#modalDeleteComment" data-bs-whatever="@(comment.Id)">
                                    <img class="deleteCommentImg" src="~/image/delete.png">
                                </button>
                            </div>
                        }
                    </div>
                }
            </div>

            <div id="divDown">
                <button id="btnDown" class="btnImg" onclick="downPage()">
                    <img class="imgDown" src="~/image/content/down.png">
                </button>
            </div>

            <div id="divCreateComment" class="mt-3">
                <div class="containerParentFlexCenter">
                    <input id="textCreateComment" type="text" class="form-control"
                           placeholder="Написать комментарий..." maxlength="512">

                    <div>
                        <button class="btnImg" onclick="createUserComment()">
                            <img class="contentImg" src="~/image/content/comment.png">
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<!-- Модальное окно удаления комментария -->
<div class="modal fade" id="modalDeleteComment" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="staticBackdropLabel">Удаление комментария</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
            </div>
            <div class="modal-body">
                <p>Вы уверены что хотите удалить комментарий?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Отмена</button>
                <button id="btnDeleteComment" type="button" class="btn btn-outline-danger" data-bs-dismiss="modal">Удалить</button>
            </div>
        </div>
    </div>
</div>
<script>
    let id;

    const modalDeleteComment = document.getElementById('modalDeleteComment');
    modalDeleteComment.addEventListener('show.bs.modal', function (event) {
        const button = event.relatedTarget;
        id = button.getAttribute('data-bs-whatever');
    });

    const btnDeleteComment = document.getElementById('btnDeleteComment');
    btnDeleteComment.addEventListener("click", async function (event) {
        await deleteUserComment(id);
    });
</script>



<script src="~/js/content.js" asp-append-version="true"></script>
<script src="~/js/comment.js" asp-append-version="true"></script>
<script>
    initComments(@(Model.Id), @(Model.CountComments));
</script>
