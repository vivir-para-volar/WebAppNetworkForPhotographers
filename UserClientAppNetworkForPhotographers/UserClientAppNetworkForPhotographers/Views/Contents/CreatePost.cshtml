@model UserClientAppNetworkForPhotographers.Models.Data.Dtos.Contents.CreateContentPostDto

<div class="container p-3 mt-5 pb-5 pt-4">

    <div class="containerParentFlexCenter">
        <h3>Добавление поста</h3>
    </div>

    <div class="containerParentFlexCenter mt-4">
        <div class="containerCenter">
            @using (Html.BeginForm("CreatePost", "Contents", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.HiddenFor(model => model.PhotographerId)
                @Html.HiddenFor(model => model.CategoryDirsJson)


                <div class="mb-3">
                    <p><strong>Добавьте не менее одного фото</strong></p>
                </div>

                <div class="border-top border-bottom border-2 p-2">
                    <div id="carouselControls" class="carousel carousel-dark slide" data-bs-touch="false" data-bs-interval="false">
                        <div class="carousel-inner">

                            <div class="carousel-item active">
                                <div id="photos0" class="createPhotoSlider">
                                    <input id="photos0Input" type="file" accept="image/*"
                                           name="photos" class="form-control form-control-sm" />
                                </div>

                                <div id="photos0Ready" style="display:none">
                                    <img class="photoSliderMini">
                                </div>
                            </div>

                            @for (var i = 1; i < 3; i++)
                            {
                                <div class="carousel-item">
                                    <div id="photos@(i)" class="createPhotoSlider">
                                        <input id="photos@(i)Input" type="file" accept="image/*"
                                               name="photos" class="form-control form-control-sm" />
                                    </div>

                                    <div id="photos@(i)Ready" style="display:none">
                                        <img class="photoSliderMini">
                                    </div>
                                </div>
                            }
                        </div>

                        <button class="carousel-control-prev" type="button" data-bs-target="#carouselControls" data-bs-slide="prev">
                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Предыдущий</span>
                        </button>

                        <button class="carousel-control-next" type="button" data-bs-target="#carouselControls" data-bs-slide="next">
                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Следующий</span>
                        </button>
                    </div>
                </div>
                <div class="border-bottom border-2 p-2">
                    <p class="text-danger">Размер фото - не более 8 Мбайт</p>
                </div>
                @Html.ValidationSummary(true, "", new { @class = "text-danger listError" })


                <div class="mt-5 mb-3">
                    <p><strong>Добавьте описание</strong></p>
                </div>

                <div class="form-group">
                    @Html.TextAreaFor(model => model.Title, new { @class = "form-control", rows = "8", placeholder="Описание..." })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>


                <div class="mt-5 mb-3">
                    <p><strong>Добавьте не менее одной категории</strong></p>
                </div>
                @(await Html.PartialAsync("~/Views/ContentsList/CategoriesList.cshtml", Model.CategoryDirs))
                @Html.ValidationMessageFor(model => model.CategoriesIds, "", new { @class = "text-danger" })


                <div class="mt-5">
                    <input type="submit" value="Сохранить" class="btn btn-outline-dark" />
                </div>
            }
        </div>
    </div>
</div>

<script>
    for (let i = 0; i < 3; i++) {
        const photoInput = document.getElementById(`photos${i}Input`);

        photoInput.addEventListener('change', function () {
            if (this.files[0].size > maxPhotoSize) {
                photoInput.value = '';
                return false;
            }

            var reader = new FileReader();
            reader.onload = function (e) {
                document.querySelector(`#photos${i}Ready>img`).setAttribute('src', e.target.result);

                document.getElementById(`photos${i}`).style.display = "none";
                document.getElementById(`photos${i}Ready`).style.display = "block";
            }
            reader.readAsDataURL(this.files[0]);
        });
    }
</script>
