@model UserClientAppNetworkForPhotographers.Models.Data.Dtos.Photographers.PhotographerWithInfoDto

<div class="container p-3 mt-5 pb-5 pt-4">

    <div class="containerParentFlexCenter">
        <h3>Изменение профиля</h3>
    </div>


    <div class="mb-5 mt-4">
        <h4>Изменение фото профиля</h4>

        <div class="containerParentFlexMany mt-4">

            @if (Model.PhotoProfile == null)
            {
                <div class="divForPhoto"><img id="imagePreview" class="profilePhotoSettings" src="~/image/emptyProfile.png"></div>
            }
            else
            {
                <div class="divForPhoto">
                    <img id="imagePreview" class="profilePhotoSettings" src=@(Url.Action("GetPhotographerPhoto", "Common", new { name = Model.PhotoProfile}))>
                </div>
            }
            <div class="divAfterPhoto">
                @using (Html.BeginForm("UpdateProfilePhoto", "Settings", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.HiddenFor(model => model.Id)

                    <div class="form-group mb-3">
                        <input type="file" accept="image/*" name="photo" id="photoInput" class="form-control form-control-sm" />
                        @Html.HiddenFor(model => model.PhotoProfile)
                        @Html.ValidationMessageFor(model => model.PhotoProfile, "", new { @class = "text-danger" })
                    </div>

                    @Html.HiddenFor(model => model.Username)
                    @Html.HiddenFor(model => model.Email)
                    @Html.HiddenFor(model => model.Name)
                    @Html.HiddenFor(model => model.Country)
                    @Html.HiddenFor(model => model.City)

                    @Html.HiddenFor(model => model.Description)
                    @Html.HiddenFor(model => model.Awards)
                    @Html.HiddenFor(model => model.Website)
                    @Html.HiddenFor(model => model.Vk)
                    @Html.HiddenFor(model => model.Telegram)
                    @Html.HiddenFor(model => model.WhatsApp)
                    @Html.HiddenFor(model => model.Viber)

                    <div>
                        <input type="submit" value="Сохранить" class="btn btn-outline-dark btn-sm" />
                    </div>
                }
            </div>

        </div>
    </div>

    <script>
        const photoInput = document.getElementById(`photoInput`);

        photoInput.addEventListener('change', function () {
            if (this.files[0].size > maxPhotoSize) {
                photoInput.value = '';
                return false;
            }

            var reader = new FileReader();
            reader.onload = function (e) {
                document.getElementById('imagePreview').setAttribute('src', e.target.result);
            }
            reader.readAsDataURL(this.files[0]);
        });
    </script>



    <ul class="nav nav-tabs" id="editProfileTab" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="nav-link active" id="main-tab" data-bs-toggle="tab" data-bs-target="#main" type="button" role="tab" aria-controls="main" aria-selected="false">Основная инф</button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="other-tab" data-bs-toggle="tab" data-bs-target="#other" type="button" role="tab" aria-controls="other" aria-selected="false">Доп инф</button>
        </li>
    </ul>

    <div class="tab-content" id="editProfileTabContent">
        <div class="tab-pane fade show active" id="main" role="tabpanel" aria-labelledby="main-tab">
            <div class="containerParentFlexCenter">
                <div class="containerCenter mt-4">

                    <h4>Изменение основной информации профиля</h4>
                    <hr />

                    @using (Html.BeginForm("UpdatePhotographer", "Settings", FormMethod.Post))
                    {
                        <div class="form-horizontal">
                            @Html.HiddenFor(model => model.Id)

                            @Html.HiddenFor(model => model.PhotoProfile)

                            <div class="form-group mb-3">
                                @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group mb-3">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group mb-3">
                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group mb-3">
                                @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group mb-3">
                                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            @Html.HiddenFor(model => model.Description)
                            @Html.HiddenFor(model => model.Awards)
                            @Html.HiddenFor(model => model.Website)
                            @Html.HiddenFor(model => model.Vk)
                            @Html.HiddenFor(model => model.Telegram)
                            @Html.HiddenFor(model => model.WhatsApp)
                            @Html.HiddenFor(model => model.Viber)

                            @Html.ValidationSummary(true, "", new { @class = "text-danger listError" })

                            <div>
                                <input type="submit" value="Сохранить" class="btn btn-outline-dark" />
                            </div>

                        </div>
                    }
                </div>
            </div>
        </div>

        <div class="tab-pane fade" id="other" role="tabpanel" aria-labelledby="other-tab">
            <div class="containerParentFlexCenter">
                <div class="containerCenter mt-4">

                    <h4>Изменение дополнительной информации профиля</h4>
                    <hr />

                    @using (Html.BeginForm("UpdatePhotographerInfo", "Settings", FormMethod.Post))
                    {
                        <div class="form-horizontal">
                            @Html.HiddenFor(model => model.Id)

                            @Html.HiddenFor(model => model.PhotoProfile)

                            @Html.HiddenFor(model => model.Username)
                            @Html.HiddenFor(model => model.Email)
                            @Html.HiddenFor(model => model.Name)
                            @Html.HiddenFor(model => model.Country)
                            @Html.HiddenFor(model => model.City)

                            <div class="form-group mb-3">
                                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = "8" })
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group mb-3">
                                @Html.LabelFor(model => model.Awards, htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @Html.TextAreaFor(model => model.Awards, new { @class = "form-control", rows = "8" })
                                    @Html.ValidationMessageFor(model => model.Awards, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group mb-3">
                                @Html.LabelFor(model => model.Website, htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group mb-3">
                                @Html.LabelFor(model => model.Vk, htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @Html.EditorFor(model => model.Vk, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Vk, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group mb-3">
                                @Html.LabelFor(model => model.Telegram, htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @Html.EditorFor(model => model.Telegram, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Telegram, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group mb-3">
                                @Html.LabelFor(model => model.WhatsApp, htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @Html.EditorFor(model => model.WhatsApp, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.WhatsApp, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group mb-3">
                                @Html.LabelFor(model => model.Viber, htmlAttributes: new { @class = "control-label" })
                                <div>
                                    @Html.EditorFor(model => model.Viber, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Viber, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div>
                                <input type="submit" value="Сохранить" class="btn btn-outline-dark" />
                            </div>

                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

</div>
